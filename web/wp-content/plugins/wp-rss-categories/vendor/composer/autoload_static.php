<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInitdc30557f2da454c297a51874b3cf2169
{
    public static $prefixLengthsPsr4 = array (
        'R' => 
        array (
            'RebelCode\\Wpra\\Categories\\' => 26,
        ),
        'P' => 
        array (
            'Psr\\Container\\' => 14,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'RebelCode\\Wpra\\Categories\\' => 
        array (
            0 => __DIR__ . '/../..' . '/src',
        ),
        'Psr\\Container\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/container/src',
        ),
    );

    public static $classMap = array (
        'Psr\\Container\\ContainerExceptionInterface' => __DIR__ . '/..' . '/psr/container/src/ContainerExceptionInterface.php',
        'Psr\\Container\\ContainerInterface' => __DIR__ . '/..' . '/psr/container/src/ContainerInterface.php',
        'Psr\\Container\\NotFoundExceptionInterface' => __DIR__ . '/..' . '/psr/container/src/NotFoundExceptionInterface.php',
        'RebelCode\\Wpra\\Categories\\Modules\\AddonModule' => __DIR__ . '/../..' . '/src/Modules/AddonModule.php',
        'RebelCode\\Wpra\\Categories\\Modules\\TaxonomyModule' => __DIR__ . '/../..' . '/src/Modules/TaxonomyModule.php',
        'RebelCode\\Wpra\\Categories\\Modules\\TemplatesModule' => __DIR__ . '/../..' . '/src/Modules/TemplatesModule.php',
        'RebelCode\\Wpra\\Categories\\Templates\\CategoriesFeedTemplate' => __DIR__ . '/../..' . '/src/Templates/CategoriesFeedTemplate.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInitdc30557f2da454c297a51874b3cf2169::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInitdc30557f2da454c297a51874b3cf2169::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInitdc30557f2da454c297a51874b3cf2169::$classMap;

        }, null, ClassLoader::class);
    }
}
